#!/bin/bash

commit=$1
branch=${2:-HEAD}
# find out this commit is merged by which merge
# ref: http://stackoverflow.com/questions/8475448/find-merge-commit-which-include-a-specific-commit/8492711#8492711
# ref: http://www.cyberciti.biz/faq/command-to-display-lines-common-in-files/
# version=$(perl -ne 'print if ($seen{$_} .= @ARGV) =~ /10$/' <(git rev-list --ancestry-path $commit.. --all) <(git rev-list --first-parent $commit.. --all) | tail -n 1)
version=$(git find-merge $commit $branch)

if [[ ! -z $version ]]; then
    version_short=$(git rev-parse --short $version)
    echo $version_short,  $version
    exit 0
else
    exit 1
fi
